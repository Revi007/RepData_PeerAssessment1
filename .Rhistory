fileurl<-"https://s3.amazonaws.com/coursera-uploads/user-64479309e2b67f58d3fb8070/973500/asst-3/45e1fce0eb6511e4b48c5b2b0c70d3a1.txt"
download.file(fileurl, destfile="Project course Results.txt")
data<- read.table("Project course Results.txt", header=TRUE)
View(data)
set.seed(1)
rpois(5, 2)
set.seed(5)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(10)
x<-rep(0:1,each=5)
e<-rnorm(10,0,20)
e
y<0.5+2*x+e
y<-0.5+2*x+e
plot(x,y)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
mydf<-read.csv(path2csv, stringAsFactor=FALSE)
mydf<-read.csv(path2csv, stringsAsFactor=FALSE)
mydf<-read.csv(path2csv, stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?selec
?select
select(cran,ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran,-X:size)
-5:20
-(5:20)
select(cran,-(X:size)
)
filter(cran.package=="swirl")
filter(cran, package=="swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<-select(cran, ip_id, package, size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20, size_gb=size_mb/ 2^10)
mutate(cran3,corrected_size= size-1000)
mutate(cran3,corrected_size= size+1000)
mutate(cran3,correct_size= size+1000)
summartize(cran, avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
library(swirl)
swirl()
library(dplyr)
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by
cran$by_package<-group_by(cran, package)
mutate(cran, by_package = group_by(cran, package))
mutate(cran, by_package = group_by(cran, package))
info()
play()
mutate?
)
?mutate
x<-group_by(cran, package)
head(x)
cran$by_package<- NULL
head(x)
cran
x<- null
x<- NULL
x
?group_by
x<-group_by(cran, package)
x
x$gr<-summarize(x, group)
nxt()
by_package<-group_by(cran, package)
by_package
summarize(by_package, mean(size))
play()
nxt()
play()
?n
?n_distinct
nxt()
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts<-filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted<-arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$uniqye, probs = 0.99)
quantile(pack_sum$unique, probs = 0.99)
top_unique<-filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted<-arrange(top_unique, unique)
top_unique_sorted<-arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(results3)
View(result3)
cran %>%
select(ip_id, country,package,size) %>%
print
cran %>%
select() %>%
print
cran%>% select(ip_id, country,package,size)%>%print
info()
nxt()
submit()
submit()
submit()
submit()
library(swirl)
swirl()
source('C:/Revi/_Personal/Coursera/run_stast.R')
play()
Sys.setlocale("LC_TIME", "USA")
source('C:/Revi/_Personal/Coursera/run_stast.R')
Sys.setlocale("LC_TIME", "USA")
library(dplyr)
library(tidyr)
nxt()
library(tidyr)
students
?gather
gather(students,sex, count, -grade)
students2
res<-gather(students2,sex_class, count, -grade)
res
?separate
separate(data,sex_class,"_")
separate(data,sex_class,into=c("sex", "class"), "_")
separate(res,sex_class,into=c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
extract_numeric)"class5"
extract_numeric("class5")
submit()
student4
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status="passed")
passed<-passed%>%mutate(status="passed")
failed<-failed%>%mutate(status="failed")
?bind_rows
bind_raws(passed, failed)
bind_rows(passed, failed)
sat
?select
submit()
submit()
submit()
submit()
?separate
submit()
submit()
submit()
submit()
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label= T)
wday(this_day, label= TRUE)
this_moment<-now()
this_moment
second(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081958)
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-update(this_moment, hours = 23 , minutes=31, seconds = 13)
this_moment
?now
now(tzone = "America/New_York")
now("America/New_York")
nyc<-now("America/New_York")
nyc
depart<-nyc +dyas(2)
depart<-nyc +days(2)
depart
depart<-update(depart, hours=17 , minutes= 34)
depart
arrive<-depart + hours(15)+ minutes(50)
?with_tz
with_tz(arrive, "Asia/Hong_Kong")
arrive<-with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008". tz="Singapore")
last_time<-mdy("June 17, 2008", tz="Singapore")
last_time
?newinterval()
?new_interval
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
install_from_swirl("Statistical Inference")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
4/52
0
12/52
2/51
0.8*1.6/2
64
.64
mypdf
integrate(mypdf,0,1.6)
sqrt(2)
library(swirl)
swirl()
0.997*0.001
0.015*0.999
0.997*0.001/(0.000997*0.014985)
0.997*0.001/(0.997*0.001+0.015*0.999)
library(lattice)
library(datasets)
xtpolt(Ozone ~ Wind, data=airquality)
xypolt(Ozone ~ Wind, data=airquality)
xyplot(Ozone ~ Wind, data=airquality)
install.packages("ggplot2")
library(ggplot2)
str(mpg)
qplot(displ, hwy)
qplot(displ, hwy, data= mpg)
qplot(displ, hwy, data= mpg, color=drv)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(BodyWeight)
?lines
?axis
?text
?trellis.par.set
?splom
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
summary(movies)
str(movies)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
?axis
setwd("C:/Revi/_Personal/Coursera/Reproducible_data/P1")
getwd()
